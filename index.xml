<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>游냀 PDS 2024 Python</title>
      <link>https://https://tarasa24.github.io/PDS-2024-Python/</link>
      <description>Last 10 notes on 游냀 PDS 2024 Python</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>client.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/http_socket/client.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/http_socket/client.py</guid>
    <description>import socket import struct import time import pickle # Import pickle pro serializaci dat SERVER_ADR = (&#039;localhost&#039;, 12345) def start_client(message): # Vytvo콏en칤 ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>server_http.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/http_socket/server_http.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/http_socket/server_http.py</guid>
    <description>from http.server import HTTPServer, BaseHTTPRequestHandler # Jednoduch치 datab치ze database = {1: [&quot;Karel&quot;, &quot;Novy&quot;], 2: [&quot;Marek&quot;, &quot;Modry&quot;]} ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>server.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/http_socket/server.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/http_socket/server.py</guid>
    <description>import socket import threading import struct import time import pickle # P콏id치n칤 knihovny pickle from typing import Tuple # Jednoduch치 datab치ze database = {1: [&quot;Karel&quot;, ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>RabbitMQ_reliability.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_reliability.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_reliability.py</guid>
    <description>import pika # Nav치z치n칤 spojen칤 s RabbitMQ serverem connection = pika.BlockingConnection(pika.ConnectionParameters(&#039;localhost&#039;)) channel = connection.channel() ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>RabbitMQ_realtime.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_realtime.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_realtime.py</guid>
    <description>import pika # Nav치z치n칤 spojen칤 s RabbitMQ serverem connection = pika.BlockingConnection(pika.ConnectionParameters(&#039;localhost&#039;)) channel = connection.channel() ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>RabbitMQ_fanout.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_fanout.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_fanout.py</guid>
    <description>import pika # Nav치z치n칤 spojen칤 s RabbitMQ serverem connection = pika.BlockingConnection(pika.ConnectionParameters(&#039;localhost&#039;)) channel = connection.channel() ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>RabbitMQ_consumer.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_consumer.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_consumer.py</guid>
    <description>import pika def callback(ch, method, properties, body): print(f&quot; [x] P콏ijat치 zpr치va: {body}&quot;) # Nav치z치n칤 spojen칤 s RabbitMQ serverem connection = pika.BlockingConnection(pika.ConnectionParameters(&#039;localhost&#039;)) ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>RabbitMQ_producent.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_producent.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/rabbitmq_examples/RabbitMQ_producent.py</guid>
    <description>import pika # Nav치z치n칤 spojen칤 s RabbitMQ serverem connection = pika.BlockingConnection(pika.ConnectionParameters(&#039;localhost&#039;)) channel = connection.channel() ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>parallel_mapping.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/dask/parallel_mapping.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/dask/parallel_mapping.py</guid>
    <description>import dask.bag as db # Cesty ke zpracov치van칳m soubor콢m files = [&quot;file1.txt&quot;, &quot;file2.txt&quot;, &quot;file3.txt&quot;, &quot;file4.txt&quot;] # Funkce, ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item><item>
    <title>delayed_computation.py</title>
    <link>https://https:/tarasa24.github.io/PDS-2024-Python/codes/dask/delayed_computation.py</link>
    <guid>https://https:/tarasa24.github.io/PDS-2024-Python/codes/dask/delayed_computation.py</guid>
    <description>import dask @dask.delayed def inc(x): return x + 1 @dask.delayed def add(x, y): return x + y # Vyhodnocen칤m se pouze vytv치콏칤 graf 칰loh a = inc(1) # nevykon치 v칳po캜et b = inc(2) # nevykon치 ...</description>
    <pubDate>Wed, 20 Nov 2024 20:35:32 GMT</pubDate>
  </item>
    </channel>
  </rss>